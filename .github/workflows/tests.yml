name: Tests

on:
  push:
    branches: [ main, docker, develop ]
  pull_request:
    branches: [ main, docker, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.13']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_ROOT_USERNAME: test_user
          MONGO_INITDB_ROOT_PASSWORD: test_password
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --dependency-groups dev,dagster,google-api,databases
        pip install pytest pytest-cov pytest-mock
    
    - name: Set environment variables
      run: |
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_PORT=5433" >> $GITHUB_ENV
        echo "POSTGRES_DB=test_db" >> $GITHUB_ENV
        echo "POSTGRES_USER=test_user" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=test_password" >> $GITHUB_ENV
        echo "MONGO_HOST=localhost" >> $GITHUB_ENV
        echo "MONGO_PORT=27017" >> $GITHUB_ENV
        echo "MONGO_DB=test_db" >> $GITHUB_ENV
        echo "MONGO_ROOT_USER=test_user" >> $GITHUB_ENV
        echo "MONGO_ROOT_PASSWORD=test_password" >> $GITHUB_ENV
        echo "MONGO_AUTH_SOURCE=admin" >> $GITHUB_ENV
    
    - name: Run unit tests
      run: |
        pytest tests/test_assets.py tests/test_resources.py tests/test_sensors.py -v --tb=short
    
    - name: Run integration tests
      run: |
        pytest tests/test_integration.py -v --tb=short
    
    - name: Run all tests with coverage
      run: |
        pytest --cov=dagster_pipeline --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Generate coverage report
      run: |
        pytest --cov=dagster_pipeline --cov-report=html
    
    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy
    
    - name: Run Black
      run: |
        black --check dagster_pipeline/ tests/ || true
    
    - name: Run Flake8
      run: |
        flake8 dagster_pipeline/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
    
    - name: Run Flake8 full
      run: |
        flake8 dagster_pipeline/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true
